// Generated by https://quicktype.io

export interface PlexusResponse {
  took: number;
  timed_out: boolean;
  _shards: Shards;
  hits: Hits;
  aggregations: Aggregations;
}

export interface Shards {
  total: number;
  successful: number;
  skipped: number;
  failed: number;
}

export interface Aggregations {
  'Vegetarian Filter': Filter;
  'GMO Free Filter': Filter;
  'Gluten Free Filter': Filter;
  'Category Filter': CategoryFilter;
}

export interface CategoryFilter {
  doc_count_error_upper_bound: number;
  sum_other_doc_count: number;
  buckets: CategoryFilterBucket[];
}

export interface CategoryFilterBucket {
  key: Key;
  doc_count: number;
}

export enum Key {
  The1HHGZPX8Pqk0Ea0QgAE46E = '1HHGZPX8Pqk0ea0qgAE46E',
  The4AF2M72RA4CoCcAoMmSiyS = '4aF2m72rA4coCcAoMmSiyS',
}

export interface Filter {
  doc_count_error_upper_bound: number;
  sum_other_doc_count: number;
  buckets: GMOFreeFilterBucket[];
}

export interface GMOFreeFilterBucket {
  key: number;
  key_as_string: string;
  doc_count: number;
}

export interface Hits {
  total: Total;
  max_score: number;
  hits: Hit[];
}

export interface Hit {
  _index: Index;
  _type: Type;
  _id: string;
  _score: number;
  _source: Source;
}

export enum Index {
  Products = 'products',
}

export interface Source {
  id: string;
  productName: string;
  sku: string;
  displayField: string;
  optionsAvailability: null | string;
  glutenFree: boolean;
  vegetarian: boolean;
  gmoFree: boolean;
  rating: number | null;
  breadcrumbCategoryId: Key;
  breadcrumbCategoryGlobalName: BreadcrumbCategoryGlobalName;
  breadcrumbCategoryName: BreadcrumbCategoryName;
  imagesCollection: ImagesCollection;
  retail: number;
  vip: number;
}

export enum BreadcrumbCategoryGlobalName {
  Combos = 'combos',
  WeightManagement = 'weight-management',
}

export enum BreadcrumbCategoryName {
  Combos = 'Combos',
  WeightManagement = 'Weight Management',
}

export interface ImagesCollection {
  url: string;
  width: number;
  height: number;
  title: string;
}

export enum Type {
  Product = 'product',
}

export interface Total {
  value: number;
  relation: string;
}
